q()
library(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
student-mat <-  read.csv("student-mat.csv")
student-mat <-  read.csv("student-mat")
setwd("~/GitHub/IODS-project/data")
student-mat <-  read.csv("student-mat")
student-mat <-  read.table("student-mat.csv")
student-mat <-  read.table("student-mat.csv", header = TRUE, sep = "\t")
student-mat <-  read.table("student-mat.csv", sep = ";" , header=TRUE)
stu<-  read.table("student-mat.csv", sep = ";" , header=TRUE)
student_math <-  read.table("student-mat.csv", sep = ";" , header=TRUE)
student_math <-  read.csv("student-mat")
student_math <-  read.table("student-mat.csv", sep = ";" , header=TRUE)
str(student_math)
library(dplyr)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by, suffix = c(".math", ".por"))
math_por <- inner_join(stud_mat, stud_por, by = join_by, suffix = c(".math", ".por"))
math_por <- inner_join(stud_math, stud_por, by = join_by, suffix = c(".math", ".por"))
stud_math <-  read.table("student-mat.csv", sep = ";" , header=TRUE)
stud_por <- read.table("student-por.csv", sep = ";" , header=TRUE)
str(stud_math)
dim(stud_math)
str(stud_por)
dim(stud_por)
library(dplyr)
dim(stud_math)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(stud_math, stud_por, by = join_by, suffix = c(".math", ".por"))
str(math_por)
dim(math_por)
math <-  read.table("student-mat.csv", sep = ";" , header=TRUE)
por <- read.table("student-por.csv", sep = ";" , header=TRUE)
stud_
stud_math <-  read.table("student-mat.csv", sep = ";" , header=TRUE)
stud_por <- read.table("student-por.csv", sep = ";" , header=TRUE)
alc <- select(math_por, one_of(join_by))
notjoined_columns <- colnames(stud_math)[!colnames(stud_math) %in% join_by]
notjoined_columns
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
colnames(alc)
alc <- mutate(alc,alc_use <- mean(c("alc$Dalc","alc$Walc")))
?mean
alc <- mutate(alc,alc_use <- rowMeans(c("Dalc","Walc")))
alc <- mutate(alc,alc_use <- rowMeans(consumption))
consumtion <- c("Dalc","Walc")
alc <- mutate(alc,alc_use <- rowMeans(consumption))
consumption <- c("Dalc","Walc")
alc <- mutate(alc,alc_use <- rowMeans(consumption))
colnames(alc)
math_por$Dalc
math_por$Dalc.math
# create a new data frame with only the joined columns
alc <- select(math_por, one_of(join_by))
# the columns in the datasets which were not used for joining the data
notjoined_columns <- colnames(stud_math)[!colnames(stud_math) %in% join_by]
# print out the columns not used for joining
notjoined_columns
# for every column name not used for joining...
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
str(alc)
alc$Dalc
alc$Dalc
consumption <- c(alc$Dalc, alc$Walc)
str(consumption)
alc <- mutate(alc,alc_use <- rowMeans(select(alc,c("Dalc","Walc"))))
str(alc)
alc$alc_use
alc$alc_use - (0.5*(alc$Dalc+alc$Walc)
# select only positive points
# (and check that the right number of entries is left)
new_lrn14 <- filter(new_lrn14, Points>0)
str(new_lrn14)
# save table
setwd("~/GitHub/IODS-project")
write.csv(new_lrn14, file="learning2014")
# read table (and make sure to print all the entries)
options(max.print=2000)
read.csv("learning2014")
alc$alc_use - (0.5*(alc$Dalc+alc$Walc))
alc <- mutate(alc, high_use <- (alc_use>2))
alc <- mutate(alc, high_use <- (alc$alc_use>2))
alc$high_use
glimpse(alc)
colnames(alc)
alc <- mutate(alc, high_use = (alc$alc_use>2))
alc$high_use
glimpse(alc)
colnames(alc)
clear
clean
setwd("~/GitHub/IODS-project/data")
stud_math <-  read.table("student-mat.csv", sep = ";" , header=TRUE)
stud_por <- read.table("student-por.csv", sep = ";" , header=TRUE)
str(stud_math)
dim(stud_math)
str(stud_por)
dim(stud_por)
library(dplyr)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(stud_math, stud_por, by = join_by, suffix = c(".math", ".por"))
str(math_por)
dim(math_por)
alc <- select(math_por, one_of(join_by))
notjoined_columns <- colnames(stud_math)[!colnames(stud_math) %in% join_by]
notjoined_columns
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
colnames(alc)
alc$Dalc
consumption <- c(alc$Dalc, alc$Walc)
alc <- mutate(alc,alc_use = rowMeans(select(alc,c("Dalc","Walc"))))
alc$alc_use
alc <- mutate(alc, high_use = (alc$alc_use>2))
alc$high_use
glimpse(alc)
dim(alc)
colnames(alc)
setwd("~/GitHub/IODS-project/data")
write.csv(alc, file="alc")
read.csv("alc")
str(alc)
