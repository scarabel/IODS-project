setwd("~/GitHub/IODS-project")
read.csv(learning2014)
read.csv("learning2014")
options(max.print=2000)
read.csv("learning2014")
students2014 <- learning2014
students2014 <- read.csv("learning2014")
students2014
dim(students2014)
read.table(http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/learning2014.txt, , sep="\t", header=TRUE))
read.table(http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/learning2014.txt, , sep="\t", header=TRUE))
read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/learning2014.txt", sep="\t", header=TRUE))
read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/learning2014.txt", sep="\t", header=TRUE)
# rename columns coherently
str(new_lrn14)
# load table data
learning2014 <-  read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", header = TRUE, sep = "\t")
# dimension of the table:
dim(learning2014)
# both dimension and structure:
str(learning2014)
# create new dataset
# install.packages("dplyr")
library(dplyr)
# combine variables into deep
deep_qu <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
deep_col <- select(learning2014, one_of(deep_qu))
learning2014$deep <- rowMeans(deep_col)
# combine variables into stra
stra_qu <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
stra_col <- select(learning2014,one_of(stra_qu))
learning2014$stra <- rowMeans(stra_col)
# combine variables into surf
surf_qu <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
surf_col <- select(learning2014, one_of(surf_qu))
learning2014$surf <- rowMeans(surf_col)
# choose columns:
columns <- c("gender","Age","Attitude","deep","stra","surf","Points")
# create new dataset
new_lrn14 <- select(learning2014,columns)
# select only positive points
# (and check that the right number of entries is left)
new_lrn14 <- filter(new_lrn14, Points>0)
# create new dataset
install.packages("dplyr")
source('//atkk/home/s/scarabel/Documents/GitHub/IODS-project/data/create_learning2014.R', echo=TRUE)
# Plot the results
# Access the gglot2 library
library(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
# Plot the results
# Access the gglot2 library
library(ggplot2)
# Plot the results
# Access the gglot2 library
library(ggplot2)
install.packages("ggplot2")
summary(students2014$gender)
install.packages("ggplot2")
install.packages("ggplot2")
# load table data
learning2014 <-  read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", header = TRUE, sep = "\t")
# dimension of the table:
dim(learning2014)
# both dimension and structure:
str(learning2014)
# create new dataset
# install.packages("dplyr")
library(dplyr)
# combine variables into deep
deep_qu <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
deep_col <- select(learning2014, one_of(deep_qu))
learning2014$deep <- rowMeans(deep_col)
# combine variables into stra
stra_qu <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
stra_col <- select(learning2014,one_of(stra_qu))
# create new dataset
install.packages("dplyr")
# create new dataset
install.packages("dplyr")
# create new dataset
install.packages("dplyr")
library(dplyr)
library(dplyr)
# create new dataset
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
# combine variables into deep
deep_qu <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
deep_col <- select(learning2014, one_of(deep_qu))
learning2014$deep <- rowMeans(deep_col)
# I first load the dataset from the folder IODS-project and save it with name "students2014".
setwd("~/GitHub/IODS-project")
options(max.print=2000)
students2014 <- read.csv("learning2014")
str(new_lrn14)
colnames(students2014)[2] <- "age"
colnames(students2014)[3] <- "attitude"
colnames(students2014)[7] <- "points"
colnames(students2014)[2] <- "age"
colnames(students2014)[3] <- "attitude"
colnames(students2014)[7] <- "points"
str(students2014)
setwd("~/GitHub/IODS-project")
options(max.print=2000)
students2014 <- read.csv("learning2014")
str(students2014)
colnames(students2014)[3] <- "age"
colnames(students2014)[4] <- "attitude"
colnames(students2014)[8] <- "points"
str(students2014)
plot(summary(students2014$age))
plot(summary(students2014$gender))
plot(summary(students2014$points))
library(GGally)
library(ggplot2)
p <- ggpairs(students2014, mapping = aes(col=gender), lower = list(combo = wrap("facethist", bins = 20)))
p
library(GGally)
library(ggplot2)
p <- ggpairs(students2014, mapping = aes(col=gender), lower = list(combo = wrap("facethist", bins = 20)))
p
# load table data
learning2014 <-  read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", header = TRUE, sep = "\t")
# dimension of the table:
dim(learning2014)
# both dimension and structure:
str(learning2014)
# create new dataset
install.packages("dplyr")
# create new dataset
# install.packages("dplyr")
library(dplyr)
# combine variables into deep
deep_qu <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
deep_col <- select(learning2014, one_of(deep_qu))
learning2014$deep <- rowMeans(deep_col)
# combine variables into stra
stra_qu <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
stra_col <- select(learning2014,one_of(stra_qu))
learning2014$stra <- rowMeans(stra_col)
# combine variables into surf
surf_qu <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
surf_col <- select(learning2014, one_of(surf_qu))
learning2014$surf <- rowMeans(surf_col)
# choose columns:
columns <- c("gender","Age","Attitude","deep","stra","surf","Points")
# create new dataset
new_lrn14 <- select(learning2014,columns)
# select only positive points
# (and check that the right number of entries is left)
new_lrn14 <- filter(new_lrn14, Points>0)
str(new_lrn14)
# rename columns coherently
str(new_lrn14)
colnames(new_lrn14)[3] <- "age"
colnames(new_lrn14)[4] <- "attitude"
colnames(new_lrn14)[8] <- "points"
new_lrn14
str(new_lr14)
str(new_lrn14)
# load table data
learning2014 <-  read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", header = TRUE, sep = "\t")
# dimension of the table:
dim(learning2014)
# both dimension and structure:
str(learning2014)
# create new dataset
# install.packages("dplyr")
library(dplyr)
# combine variables into deep
deep_qu <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
deep_col <- select(learning2014, one_of(deep_qu))
learning2014$deep <- rowMeans(deep_col)
# combine variables into stra
stra_qu <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
learning2014$stra <- rowMeans(stra_col)
stra_col <- select(learning2014,one_of(stra_qu))
# combine variables into surf
surf_qu <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
surf_col <- select(learning2014, one_of(surf_qu))
learning2014$surf <- rowMeans(surf_col)
# choose columns:
columns <- c("gender","Age","Attitude","deep","stra","surf","Points")
# create new dataset
new_lrn14 <- select(learning2014,columns)
# select only positive points
# (and check that the right number of entries is left)
new_lrn14 <- filter(new_lrn14, Points>0)
str(new_lrn14)
# rename columns coherently
str(new_lrn14)
colnames(new_lrn14)[2] <- "age"
colnames(new_lrn14)[3] <- "attitude"
colnames(new_lrn14)[7] <- "points"
new_lrn14
# choose working directory and save table
setwd("~/GitHub/IODS-project")
write.csv(new_lrn14, file="learning2014")
# read table (and make sure to print all the entries)
options(max.print=2000)
read.csv("learning2014")
# I first load the dataset from the folder IODS-project and save it with name "students2014".
setwd("~/GitHub/IODS-project")
options(max.print=2000)
students2014 <- read.csv("learning2014")
students2014
str(students2014)
dim(students2014)
str(students2014)
p <- ggpairs(students2014[-1], mapping = aes(col=gender), lower = list(combo = wrap("facethist", bins = 20)))
p
summary(my_model)
my_model <- lm( students2014$points ~ students2014$attitude + students2014$stra + students2014$surf)
summary(my_model)
my_model <- lm(points ~ attitude + stra + surf, data = students2014)
summary(my_model)
my_model2 <- lm(points ~ attitude + stra, data = students2014)
summary(my_model2)
?plot
?plot.lm
par(mfrow = c(1,3))
plot(my_model2, which=c(1,2,5))
require(cowplot)
```{r eval=TRUE, echo=FALSE, fig.width=3, fig.height=3}
install.packages(GGally)
install.packages(GGally)
library(ggplot2)
install.packages(GGally)
install.packages("GGally")
setwd("~/GitHub/IODS-project/data")
setwd("~/GitHub/IODS-project/data")
alc <- read.csv("alc")
alc
colnames(alc)
colnames(alc)
dim(alc)
alc <- mutate(alc, Pedu = rowMeans(select(alc,c("Medu","Fedu"))))
library(dplyr)
alc <- mutate(alc, Pedu = rowMeans(select(alc,c("Medu","Fedu"))))
str(alc)
summary(alc$G3)
summary(alc$activities)
summary(alc$famrel)
summary(alc$Pedu)
summary(alc$G3)
qplot(activities, high_use, data = alc) + geom_smooth(method = "lm") + ggtitle("Activities vs high use")
qplot(activities, high_use, data = alc) + geom_points() + ggtitle("Activities vs high use")
qplot(activities, high_use, data = alc) + geom_point() + ggtitle("Activities vs high use")
qplot(activities, alc_use, data = alc) + geom_point() + ggtitle("Activities vs high use")
qplot(activities, alc_use, data = alc) + geom_bar() + ggtitle("Activities vs high use")
qplot(activities, alc_use, data = alc)
qplot(activities, alc_use, data = alc) + geom_bar() + ggtitle("Activities vs high use")
qplot(activities, alc_use, data = alc) + geom_histogram() + ggtitle("Activities vs high use")
qplot(activities, high_use, data = alc) + geom_bar() + ggtitle("Activities vs high use")
ggplot(activities, high_use, data = alc) + geom_bar() + ggtitle("Activities vs high use")
summary(alc$activities)
summary(alc$famrel)
summary(alc$Pedu)
summary(alc$G3)
ggplot(activities, high_use, data = alc) + geom_bar() + ggtitle("Activities vs high use")
ggplot(alc$activities, high_use, data = alc) + geom_bar() + ggtitle("Activities vs high use")
ggplot(alc$activities, high_use, data = alc, aes(fl)) + geom_bar() + ggtitle("Activities vs high use")
ggplot(x=alc$activities, y=alc$high_use, aes(fl)) + geom_bar() + ggtitle("Activities vs high use")
qplot(famrel, high_use, data = alc) + geom_smooth(method = "lm") + ggtitle("Family relation vs high use")
qplot(famrel, high_use, data = alc) + geom_point() + ggtitle("Family relation vs high use")
qplot(famrel, high_use, data = alc) + geom_histogram() + ggtitle("Family relation vs high use")
qplot(famrel, high_use, data = alc) + geom_bar(stat="identity") + ggtitle("Family relation vs high use")
ggplot(famrel, mapping=aes(col=high_use))
ggplot(alc$famrel, mapping=aes(col=high_use))
ggplot(alc$famrel, mapping=aes(col=high_use)) + geom_point()
colnames(alc)
alc$X
ggplot(alc$famrel,alc$X, mapping=aes(col=high_use)) + geom_point()
qplot(alc$famrel,alc$X, mapping=aes(col=high_use)) + geom_point()
qplot(alc$famrel,alc$X, mapping=aes(col=alc$high_use)) + geom_point()
qplot(x=alc$X, y=alc$famrel,mapping=aes(col=alc$high_use)) + geom_point()
qplot(data=alc, x=X, y=famrel,mapping=aes(col=high_use)) + geom_point()
qplot(data=alc, x=X, y=activities,mapping = aes(col=high_use)) + geom_point() + ggtitle("Family relations")
qplot(data=alc, x=X, y=activities,mapping = aes(col=high_use)) + geom_point() + ggtitle("Family relations")
qplot(data=alc, x=X, y=Pedu,mapping = aes(col=high_use)) + geom_point() + ggtitle("Family relations")
qplot(data=alc, x=X, y=G3,mapping = aes(col=high_use)) + geom_point() + ggtitle("Family relations")
```{r eval=TRUE, echo=FALSE, fig.width=3, fig.height=3}
qplot(data=alc, x=X, y=activities,mapping = aes(col=high_use)) + geom_point() + ggtitle("Extra-curricular activities")
qplot(data=alc, x=X, y=famrel,mapping = aes(col=high_use)) + geom_point() + ggtitle("Family relations")
qplot(data=alc, x=X, y=Pedu,mapping = aes(col=high_use)) + geom_point() + ggtitle("Parents' education")
qplot(data=alc, x=X, y=G3,mapping = aes(col=high_use)) + geom_point() + ggtitle("Final grade")
library(GGally)
library(ggplot2)
qplot(data=alc, x=X, y=activities,mapping = aes(col=high_use)) + geom_point() + ggtitle("Extra-curricular activities")
qplot(data=alc, x=X, y=famrel,mapping = aes(col=high_use)) + geom_point() + ggtitle("Family relations")
var <- c("activities","famrel","Pedu","G3")
alc_red <- select(alc,c("activities","famrel","Pedu","G3"))
alc_red <- select(alc,c("activities","famrel","Pedu","G3"))
alc_red
str(alc_red)
p <- ggpairs(alc_red, mapping = aes(col=high_use), lower = list(combo = wrap("facethist", bins = 20)))
pp
p
alc_red <- select(alc,c("activities","famrel","Pedu","G3","high_use"))
p <- ggpairs(alc_red, mapping = aes(col=high_use), lower = list(combo = wrap("facethist", bins = 20)))
p
p <- ggpairs(alc_red, lower = list(combo = wrap("facethist", bins = 20)))
p
p <- ggpairs(alc_red, mapping = aes(col=high_use))
p
str(alc_red)
alc_red
p <- ggpairs(alc_red[-1], mapping = aes(col=high_use))
p
p <- ggpairs(alc_red[-1])
p
p <- ggpairs(alc_red)
p
p <- ggpairs(alc_red,stat="count")
alc_red <- select(alc,c("high_use","activities","famrel","Pedu","G3"))
p <- ggpairs(alc_red[-1])
p
p <- ggpairs(alc_red)
p
p <- ggpairs(alc_red)+ geom_bar(width = 0.5) +
#, lower = list(combo = wrap("facethist", bins = 20)))
p
p <- ggpairs(alc_red, combo="facetbar")
p <- ggpairs(alc_red, upper=(continuous="points", combo="facetbar"))
p <- ggpairs(alc_red, upper=list(continuous="points", combo="facetbar"))
p
p <- ggpairs(alc_red, upper=list(continuous="points", combo="box_no_facet",discrete="facetbar"))
p
p <- ggpairs(alc_red, upper=list(continuous="points", combo="box_no_facet",discrete="ratio"))
p
p <- ggpairs(alc_red[-2], upper=list(continuous="points", combo="box_no_facet",discrete="ratio"))
p
p <- ggpairs(alc_red[-2], upper = list(continuous = "cor", combo = "box_no_facet", discrete =  "facetbar", na = "na"), lower = list(continuous = "points", combo =   "facethist", discrete = "facetbar", na = "na"))
p
p <- ggpairs(alc_red[-3], upper = list(continuous = "cor", combo = "box_no_facet", discrete =  "facetbar", na = "na"), lower = list(continuous = "points", combo =   "facethist", discrete = "facetbar", na = "na"))
p
p <- ggpairs(alc_red[-3], upper = list(continuous = "cor", combo = "box_no_facet", discrete =  "facetbar", na = "na"), lower = list(continuous = "points", combo =   "facethist", discrete = "facetbar", na = "na"), diag = list(continuous =   "densityDiag", discrete = "barDiag", na = "naDiag"))
p
qplot(data=alc, x=X, y=famrel,mapping = aes(col=high_use)) + geom_point() + ggtitle("Family relations")
qplot(data=alc, x=X, y=Pedu,mapping = aes(col=high_use)) + geom_point() + ggtitle("Parents' education")
qplot(data=alc, x=X, y=Pedu,mapping = aes(col=high_use)) + geom_point() + ggtitle("Parents' education")
qplot(data=alc, x=X, y=goout,mapping = aes(col=high_use)) + geom_point() + ggtitle("Going out with friends")
qplot(data=alc, x=X, y=goout,mapping = aes(col=high_use)) + geom_point() + ggtitle("Going out with friends")
qplot(data=alc, x=X, y=G3,mapping = aes(col=high_use)) + geom_point() + ggtitle("Final grade")
alc_red <- select(alc,c("high_use","famrel","Pedu","goout","G3"))
p <- ggpairs(alc_red[-3], upper = list(continuous = "cor", combo = "box_no_facet", discrete =  "facetbar", na = "na"), lower = list(continuous = "points", combo =   "facethist", discrete = "facetbar", na = "na"), diag = list(continuous =   "densityDiag", discrete = "barDiag", na = "naDiag"))
p
p <- ggpairs(alc_red)
p
alc_red <- select(alc,c("activities","high_use","famrel","Pedu","goout","G3"))
p <- ggpairs(alc_red, mapping = aes(col=activities))
p
p <- ggpairs(alc_red[-1], mapping = aes(col=activities))
p
alc_red <- select(alc,c("activities","high_use","famrel","Pedu","goout","G3"))
p <- ggpairs(alc_red[-1], mapping = aes(col=activities))
p
alc_re
alc_red
p <- ggpairs(alc_red[-1], mapping = aes(col=alc_red$activities))
p <- ggpairs(alc_red, mapping = aes(col=activities))
p
alc_red <- select(alc,c("high_use","famrel","Pedu","goout","G3"))
p <- ggpairs(alc_red)
p
gather(alc_red) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
library(tidyr);
install.packages("tidyr")
library(tidyr);
gather(alc_red) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
library(GGally)
alc_red <- select(alc,c("high_use","famrel","Pedu","goout","G3"))
gather(alc_red) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
```{r eval=TRUE, echo=FALSE, fig.width=5, fig.height=3}
library(GGally)
library(ggplot2)
alc_red <- select(alc,c("high_use","famrel","Pedu","goout","G3"))
gather(alc_red) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
g1 <- ggplot(alc, aes(x = high_use, y = G3, col=activities))
g1
g1 + geom_boxplot()
alc_red <- select(alc,c("high_use","famrel","Pedu","goout","activities","G3"))
gather(alc_red) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
gather(alc_red) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar(aes(fill = high_use))
gather(alc_red) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar(aes(fill = alc$high_use))
gather(alc_red) %>%
ggplot(aes(gather(alc_red))) + facet_wrap("key", scales = "free") + geom_bar(aes(fill = high_use))
alc_red <- select(alc,c("high_use","famrel","Pedu","goout","activities","G3"))
gather(alc_red) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
p <- ggpairs(alc_red)
p <- ggpairs(alc_red)
p
gather(alc_red)
gather(alc_red) %>%
ggplot(aes(alc_red)) + facet_wrap("key", scales = "free") + geom_bar()
gather(alc_red) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
m <- glm(high_use ~ famrel + Pedu + goout + G3, data = alc, family = "binomial")
m <- glm(high_use ~ famrel + Pedu + goout + G3, data = alc_red, family = "binomial")
summary(m)```
summary(m)
m2 <- glm(high_use ~ famrel + goout, data = alc_red, family = "binomial")
summary(m2)
OR <- coef(m) %>% exp
CI <- confint(m) %>% exp
cbind(OR, CI)
m2 <- glm(high_use ~ famrel + goout, data = alc_red, family = "binomial")
summary(m2)
OR <- coef(m2) %>% exp
CI <- confint(m2) %>% exp
cbind(OR, CI)
?predict
?table
predictions <- predict(m, type = "response")
alc_red <- mutate(alc_red, predictions = predictions)
alc_red
table(select(alc_red,c("high_use","predictions")))
alc_red <- mutate(alc_red, predictions = predictions>0.5)
predictions <- predict(m2, type = "response")
alc_red <- mutate(alc_red, predictions = predictions>0.5)
T <- table(select(alc_red,c("high_use","predictions")))
T <- table(high_use=alc_red$high_use,alc_red$predictions)
T
alc_red <- mutate(alc_red,wrong=wrong)
wrong <- abs(alc_red$high_use-alc_red$predictions)>0.5
alc_red <- mutate(alc_red,wrong=wrong)
mean(wrong)
# define a loss function (mean prediction error)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
# call loss_func to compute the average number of wrong predictions in the (training) data
loss_func(class = alc_red$high_use, prob = alc_red$predictions)
library(boot)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
cv <- cv.glm(data=alc_red, cost=loss_func, glmfit=m2, K=10)
cv$delta[1]
alc_red <- select(alc,c("high_use","famrel","Pedu","goout","absences","G3"))
gather(alc_red) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
p <- ggpairs(alc_red)
p
m2 <- glm(high_use ~ famrel + goout + absences, data = alc_red, family = "binomial")
summary(m2)
OR <- coef(m2) %>% exp
cbind(OR, CI)
predictions <- predict(m2, type = "response")
alc_red <- mutate(alc_red, predictions = predictions>0.5)
T <- table(high_use=alc_red$high_use,prediction=alc_red$predictions)
T
m2 <- glm(high_use ~ famrel + goout + absences, data = alc_red, family = "binomial")
summary(m2)
OR <- coef(m2) %>% exp
cbind(OR, CI)
alc_red <- select(alc,c("high_use","famrel","Pedu","goout","absences"))
gather(alc_red) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
m2 <- glm(high_use ~ famrel + goout + absences, data = alc_red, family = "binomial")
summary(m2)
OR <- coef(m2) %>% exp
CI <- confint(m2) %>% exp
cbind(OR, CI)
```{r eval=TRUE, echo=FALSE}
predictions <- predict(m2, type = "response")
T <- table(high_use=alc_red$high_use,prediction=alc_red$predictions)
T
wrong <- abs(alc_red$high_use-alc_red$predictions)>0.5
wrong <- abs(alc_red$high_use-alc_red$predictions)>0.5
mean(wrong)
predictions <- predict(m2, type = "response")
alc_red <- mutate(alc_red, predictions = predictions>0.5)
T <- table(high_use=alc_red$high_use,prediction=alc_red$predictions)
wrong <- abs(alc_red$high_use-alc_red$predictions)>0.5
mean(wrong)
library(boot)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
cv <- cv.glm(data=alc_red, cost=loss_func, glmfit=m2, K=10)
cv$delta[1]
